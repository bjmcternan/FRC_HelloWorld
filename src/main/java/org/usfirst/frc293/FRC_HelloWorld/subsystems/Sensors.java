// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc293.FRC_HelloWorld.subsystems;


import org.usfirst.frc293.FRC_HelloWorld.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Sensors extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private AnalogGyro analogGyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final float LEFT_TILT_MAX = -1.0f;
    private final float RIGHT_TILT_MAX = 1.0f;
    private float testTiltChange = -0.1f;
    private float testValuesYAxis = 0.0f;

    public Sensors() {
        //Commented out to prevent errors since sensor does note exist
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        // analogGyro = new AnalogGyro(0);
        // addChild("AnalogGyro",analogGyro);
        // analogGyro.setSensitivity(0.007);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        testValuesYAxis = 0.0f; //Initialize testValuesYAxis
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        testValuesYAxis += testTiltChange; //Update testValue

        ////Test and verify tilt values
        if(testValuesYAxis <= LEFT_TILT_MAX) {//Check left tilt isn't maxed
            testValuesYAxis = LEFT_TILT_MAX; //Set to max
            testTiltChange *= -1; //Flip testTiltChange to rotate right
        } 
        else if(testValuesYAxis >= RIGHT_TILT_MAX) {//Check right tilt isn't maxed
            testValuesYAxis = RIGHT_TILT_MAX; //Set to max
            testTiltChange *= -1; //Flip testTiltChange to rotate left
        }
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    //Allows other subsystems to query the current sensor value
    public float getGSensorYValue() {
        return testValuesYAxis;
    }
}

